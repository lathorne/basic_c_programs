# Execution begins at address 0 
		.pos 0
		irmovq stack, %rsp  	# Set up stack pointer
		call main		# Execute main program
		halt			# Terminate program 

# Array of 4 elements
		.align 8
array:	.quad 0xdddd          # These values should get sorted
        .quad 0xeeee
        .quad 0xbbbb
        .quad 0xaaaa
        .quad 0xffff
        .quad 0xcccc
        .quad 0x0101          # This value should not change


main:	irmovq array,%rdi
		irmovq $6,%rsi
		call Bubble		# Bubble(array, )
		ret

# void Bubble(long *data, long count)
Bubble:
		irmovq 	$1, %r9
		irmovq	$8, %r10
		rrmovq	%rsi, %r8
		subq	%r9, %r8
		andq	%r8, %r8
		jle L8
		addq	%rsi, %rsi
		addq	%rsi, %rsi
		addq	%rsi, %rsi
		addq	%rdi, %rsi
		jmp L10
L12:
		mrmovq (%rax), %rdx
		mrmovq	-8(%rax), %rcx
		rrmovq	%rdx, %r11
		subq	%rcx, %r11
		jge	L11
		rmmovq	%rcx, (%rax)
		rmmovq 	%rdx, -8(%rax)
L11:
		addq	%r10, %rax
		rrmovq	%rax, %r11
		subq	%rsi, %r11
		jne L12
L13:
		subq	%r10, %rsi
		subq	%r9, %r8
		je L8
L10:
		andq	%r8, %r8
		jle L13
		rrmovq 	%rdi, %rax
		addq	%r10, %rax
		jmp L12
L8:
		ret


# Stack starts here and grows to lower addresses
	.pos 0x200
stack:
